<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://schema.cloudfoundry.org/spring"
		xmlns:xsd="http://www.w3.org/2001/XMLSchema"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:tool="http://www.springframework.org/schema/tool"
		targetNamespace="http://schema.cloudfoundry.org/spring"
		elementFormDefault="qualified"
		attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans" />
	<xsd:import namespace="http://www.springframework.org/schema/tool" />

	<xsd:annotation>
		<xsd:documentation><![CDATA[
	Defines the configuration elements for Cloud.
		]]></xsd:documentation>
	</xsd:annotation>

	<xsd:element name="data-source">
		<xsd:annotation>
			<xsd:documentation>
				Locates a DataSource service.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The id for this DataSource.
						If not provided, the service name will be used as a fallback.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="service-name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The name of the DataSource service.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
            <xsd:attribute name="connection-properties" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The connection properties that will be sent to the JDBC driver when establishing new
                        connections. Format of the string must be [propertyName=property;]
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="validation-query" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The SQL query that will be used to validate connections from this pool, must return at least
                        one row.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="validation-query-timeout" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The timeout in seconds before connection validation queries fail.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="test-on-borrow" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        Whether objects will be validated before being borrowed from the pool (for a true value to have
                        any effect, the validationQuery parameter must be set to a non-null string).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="test-on-return" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        Whether objects will be validated before being returned to the poo.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="test-while-idle" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        Whether objects will be validated by the idle object evictor (if any).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="initial-size" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The initial size of the connection pool.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="max-active" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The maximum number of active connections that can be allocated at the same time.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="max-idle" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The maximum number of connections that can remain idle in the pool.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="min-idle" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The minimum number of idle connections in the pool.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="max-wait" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The maximum number of milliseconds that the pool will wait for a connection to be returned
                        before throwing an exception.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="pool-prepared-statements" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        Whether to pool statements or not.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="max-open-prepared-statements" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        The maximum number of open statements that can be allocated from the statement pool at
                        the same time.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="rabbit-connection-factory">
		<xsd:annotation>
			<xsd:documentation>
				Locates a RabbitMQ service and creates a ConnectionFactory for it.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The id for this ConnectionFactory.
						If not provided, the service name will be used as a fallback.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="service-name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The name of the RabbitMQ service.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="redis-connection-factory">
		<xsd:annotation>
			<xsd:documentation>
				Locates a Redis service and creates a ConnectionFactory for it.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The id for this ConnectionFactory.
						If not provided, the service name will be used as a fallback.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="service-name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The name of the Redis service.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="mongo-db-factory">
		<xsd:annotation>
			<xsd:documentation>
				Locates a Mongo service.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The id for this MongoDbFactory instance.
						If not provided, the service name will be used as a fallback.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="service-name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The name of the Mongo service.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="properties">
		<xsd:annotation>
			<xsd:documentation source="org.cloudfoundry.runtime.env.CloudPropertiesFactoryBean"><![CDATA[
				Exposes cloud properties as a Properties object (suitable for Spring Property Placeholder Configurer).
				Provides the same set of properties that are automatically exposed to Spring 3.1 (or later) based applications.
			]]></xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports type="java.util.Properties" />
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The id for the properties object.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="service-scan">
		<xsd:annotation>
			<xsd:documentation source="org.cloudfoundry.runtime.service.CloudServicesScanner"><![CDATA[
				Exposes the available cloud services as beans, which then may be injected into other beans.
			]]></xsd:documentation>
		</xsd:annotation>
	</xsd:element>

</xsd:schema>
